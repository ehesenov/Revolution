{"ast":null,"code":"let data = [];\n\nconst increaseReducer = (state = data, action) => {\n  switch (action.type) {\n    case \"NEW_DATA\":\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default increaseReducer;","map":{"version":3,"sources":["C:/Users/Lenovo/revolution/src/redux/increaseReducer.js"],"names":["data","increaseReducer","state","action","type","payload"],"mappings":"AAAA,IAAIA,IAAI,GAAC,EAAT;;AAEA,MAAMC,eAAe,GAAC,CAACC,KAAK,GAACF,IAAP,EAAYG,MAAZ,KAAqB;AACnC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACI,aAAO,CAAC,GAAGF,KAAJ,EAAUC,MAAM,CAACE,OAAjB,CAAP;;AACI;AACD,aAAOH,KAAP;AAJX;AAMP,CAPD;;AASA,eAAeD,eAAf","sourcesContent":["let data=[]\r\n\r\nconst increaseReducer=(state=data,action)=>{\r\n        switch(action.type){\r\n            case \"NEW_DATA\":\r\n                return [...state,action.payload]\r\n                    default:\r\n                   return state\r\n        }\r\n}\r\n\r\nexport default increaseReducer"]},"metadata":{},"sourceType":"module"}