{"version":3,"file":"AnimationHelper.js","sourceRoot":"","sources":["../../src/AnimationHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Easing, Group, Tween } from '@tweenjs/tween.js';\nimport { AnimationData } from './AnimationData.js';\n\n/* global HandwritingDrawing, HandwritingDrawingSegment, HandwritingPrediction, HandwritingSegment */\n\ninterface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\ninterface CharacterPosition {\n  row: number;\n  column: number;\n}\n\nconst ANIMATION_DURATION_IN_MS = 280;\n\nexport class AnimationHelper {\n  private static readonly characterMetrics = new Map<string, TextMetrics>();\n\n  #animationTimeoutHandle: number = 0;\n\n  animate(\n    textContext: string,\n    prediction: HandwritingPrediction,\n    drawing: HandwritingDrawing,\n    ctx: CanvasRenderingContext2D,\n    animationData: AnimationData\n  ) {\n    // set canvas to textarea font\n    ctx.font = `normal ${animationData.fontSize} monospace`;\n\n    // pre-calculate target positions\n    const targetPositions = AnimationHelper.__getTargetPositionMap(\n      `${textContext}${prediction.text}`,\n      animationData,\n      ctx\n    );\n    const group = AnimationHelper.__getTweenGroupForSegments(\n      textContext,\n      prediction,\n      drawing,\n      ctx,\n      targetPositions,\n      animationData\n    );\n    this.__render(ctx, group);\n\n    return new Promise(res => {\n      setTimeout(() => {\n        res(null);\n        cancelAnimationFrame(this.#animationTimeoutHandle);\n      }, ANIMATION_DURATION_IN_MS);\n    });\n  }\n\n  private __render(ctx: CanvasRenderingContext2D, tweenGroup: Group) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    tweenGroup.update();\n\n    this.#animationTimeoutHandle = requestAnimationFrame(() =>\n      this.__render(ctx, tweenGroup)\n    );\n  }\n\n  private static __getTargetPositionMap(\n    text: string,\n    { width, padding }: AnimationData,\n    ctx: CanvasRenderingContext2D\n  ): Map<number, CharacterPosition> {\n    const map = new Map<number, CharacterPosition>();\n    const maxWidth = width - padding;\n\n    let rollingLength = 0;\n    let row = 0;\n    let column = 0;\n\n    // Perform basic layouting. Does not take word breaks into account.\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i <= text.length; i++) {\n      const character = text[i];\n      if (character === '\\n') {\n        row += 1;\n        column = 0;\n        rollingLength = 0;\n      } else {\n        // As we're only using a monospace font right now, the actual character\n        // doesn't matter\n        rollingLength += this.__getCharacterMetrics('X', ctx).width;\n\n        if (rollingLength > maxWidth) {\n          row += 1;\n          column = 0;\n          rollingLength = 0;\n        } else {\n          column += 1;\n        }\n      }\n\n      map.set(i, { row, column });\n    }\n\n    return map;\n  }\n\n  private static __getTweenGroupForSegments(\n    textContext: string,\n    prediction: HandwritingPrediction,\n    drawing: HandwritingDrawing,\n    ctx: CanvasRenderingContext2D,\n    positionMap: Map<number, CharacterPosition>,\n    animationData: AnimationData\n  ) {\n    const tweenGroup = new Group();\n    prediction.segmentationResult\n      ?.map(segment => ({\n        segment,\n        sourceRect: this.__getSourceRect(\n          segment.drawingSegments,\n          drawing,\n          ctx.canvas\n        ),\n      }))\n      .map(({ segment, sourceRect }) => ({\n        sourceRect,\n        canvas: this.__getCanvas(sourceRect, ctx),\n        targetRect: this.__getTargetRect(\n          textContext.length,\n          segment,\n          positionMap,\n          animationData,\n          ctx\n        ),\n      }))\n      .forEach(({ sourceRect, targetRect, canvas }) => {\n        this.__startTween(sourceRect, targetRect, canvas, tweenGroup, ctx);\n      });\n\n    return tweenGroup;\n  }\n\n  private static __startTween(\n    from: Rect,\n    to: Rect,\n    graphemeCanvas: OffscreenCanvas,\n    tweenGroup: Group,\n    ctx: CanvasRenderingContext2D\n  ) {\n    new Tween({ opacity: 1, ...from }, tweenGroup)\n      .to({ opacity: 0, ...to }, ANIMATION_DURATION_IN_MS)\n      .easing(Easing.Quadratic.Out)\n      .onUpdate(({ x, y, width, height, opacity }) => {\n        ctx.canvas.style.opacity = `${opacity}`;\n\n        if (width <= 0 && height <= 0) {\n          return;\n        }\n\n        ctx.drawImage(graphemeCanvas, x, y, width, height);\n      })\n      .start();\n  }\n\n  private static __getCanvas(\n    { x, y, width, height }: Rect,\n    ctx: CanvasRenderingContext2D\n  ) {\n    const safeWidth = Math.max(width * devicePixelRatio, devicePixelRatio);\n    const safeHeight = Math.max(height * devicePixelRatio, devicePixelRatio);\n    // ctx is scaled to devicePixelRatio, but getImageData and putImageData\n    // don't respect the transformation matrix\n    const imageData = ctx.getImageData(\n      Math.max(x * devicePixelRatio, 0),\n      Math.max(y * devicePixelRatio, 0),\n      safeWidth,\n      safeHeight\n    );\n    const canvas = new OffscreenCanvas(safeWidth, safeHeight);\n    canvas.getContext('2d')?.putImageData(imageData, 0, 0);\n    return canvas;\n  }\n\n  private static __getCharacterMetrics(\n    character: string,\n    ctx: CanvasRenderingContext2D\n  ): TextMetrics {\n    let metrics = AnimationHelper.characterMetrics.get(character);\n    if (metrics) {\n      return metrics;\n    }\n\n    // cache metrics for given character\n    metrics = ctx.measureText(character);\n    AnimationHelper.characterMetrics.set(character, metrics);\n    return metrics;\n  }\n\n  private static __getTargetRect(\n    textContextLength: number,\n    { beginIndex, endIndex }: HandwritingSegment,\n    posMap: Map<number, any>,\n    { padding, scrollTop }: AnimationData,\n    ctx: CanvasRenderingContext2D\n  ): Rect {\n    const length = endIndex - beginIndex;\n    // As we're using monospace fonts, the particular character does not matter\n    const { width, emHeightAscent } = AnimationHelper.__getCharacterMetrics(\n      'X',\n      ctx\n    );\n    const { row, column } = posMap.get(textContextLength + beginIndex);\n\n    return {\n      x: padding + column * width,\n      y: padding - scrollTop + row * emHeightAscent,\n      width: length * width,\n      height: emHeightAscent,\n    };\n  }\n\n  private static __getSourceRect(\n    drawingSegments: HandwritingDrawingSegment[],\n    drawing: HandwritingDrawing,\n    canvas: HTMLCanvasElement\n  ): Rect {\n    let minX = canvas.width;\n    let minY = canvas.height;\n    let maxX = 0;\n    let maxY = 0;\n\n    for (const segment of drawingSegments) {\n      const stroke = drawing.getStrokes()[segment.strokeIndex];\n      const points =\n        stroke\n          ?.getPoints()\n          .filter(\n            (_, index) =>\n              index >= segment.beginPointIndex && index <= segment.endPointIndex\n          ) ?? [];\n\n      const xPoints = points\n        .filter((point): point is { x: number } => 'x' in point)\n        .map(point => point.x);\n      const yPoints = points\n        .filter((point): point is { y: number } => 'y' in point)\n        .map(point => point.y);\n\n      minX = Math.min(minX, ...xPoints);\n      minY = Math.min(minY, ...yPoints);\n      maxX = Math.max(maxX, ...xPoints);\n      maxY = Math.max(maxY, ...yPoints);\n    }\n\n    return { x: minX, y: minY, width: maxX - minX, height: maxY - minY };\n  }\n}\n"]}